apiVersion: 1

datasources:
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true
    jsonData:
      httpMethod: POST
      manageAlerts: true
      prometheusType: Prometheus
      prometheusVersion: 2.47.0
      cacheLevel: 'High'
      disableMetricsLookup: false
      customQueryParameters: ''
      timeInterval: '30s'
      queryTimeout: '60s'
      defaultEditor: code
      disableRecordingRules: false
      incrementalQuerying: false
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: jaeger
          url: 'http://jaeger:16686/trace/$${__value.raw}'
    secureJsonData: {}

  - name: Elasticsearch
    type: elasticsearch
    access: proxy
    url: http://elasticsearch:9200
    database: 'agentic-rag-logs-*'
    editable: true
    jsonData:
      interval: Daily
      timeField: '@timestamp'
      esVersion: '8.11.0'
      maxConcurrentShardRequests: 5
      logMessageField: message
      logLevelField: level
      includeFrozen: false
      xpack: false
    secureJsonData: {}

  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686
    editable: true
    uid: jaeger
    jsonData:
      tracesToLogs:
        datasourceUid: 'elasticsearch'
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [{ key: 'service.name', value: 'service' }]
        mapTagNamesEnabled: false
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        filterByTraceID: false
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: 'prometheus'
        tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      serviceMap:
        datasourceUid: 'prometheus'
      nodeGraph:
        enabled: true
      search:
        hide: false
      spanBar:
        type: 'Tag'
        tag: 'http.path'
    secureJsonData: {}
